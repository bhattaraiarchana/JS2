shortcut to copy:  alt+shift+down
shortcut to change every same text atonce: ctrl+d

JS
    synchronous
    single threaded
    blocking language

Datatypes:
    number: 1,2,1.3 ...
    boolean: true,false
    string: anything can be string under double quotation. ("1","a"....)

only number string can be converted to number
"10" -> 10

boolean
    true -> 1
    false -> 0
    In boolean conversion, all empty are false. Either 0 in number or "" in string

normally string text appears in white color and others in yellow -> with these available extension
array is the collection of similar data or different data in js.
array stores collection of values.



-OPERATIONS

    the operations can be done between num/num, num/string, string/string
        1+1=2
        "1"+"1"="11"
        1+"1"="11"
        1+1+"1"+1+1= 2+"1"+1+1= "21"+1+1= "211"+1= "2111"   the operation is done between only two values, it is not executed at once


-foEach doesnot produce any data.
If & Else Statements
We use conditions in code for decision-making and controlling the flow of a program.

The if-else statement in JavaScript is used to make decisions in your code. It allows your program to execute different blocks of code depending on whether a given condition is true or false.

Here's a simple explanation:

if (condition) {
  // This block of code runs if the condition is true
} else {
  // This block of code runs if the condition is false
}
Here's how it works:

The if keyword is followed by a set of parentheses ( ). Inside the parentheses, you write a condition (something that can be either true or false).

If the condition inside the parentheses is true, the code inside the first set of curly braces { } (after if) is executed.

If the condition is false, the code inside the second set of curly braces { } (after else) is executed.

Here's an example with actual code:

let age = 18;

if (age >= 13) {
  console.log("You're a teenager!");
} else {
  console.log("Hello baby!");
}
In this example, if the age variable is 13 or older, it will print "You're a teenager!" Otherwise, it will print "Hello baby!" The condition age >= 13 is true or false based on whether the value of age is greater than or equal to 13.

Complete the given program which is supposed to do the following:

Let's think of a real-life example where we need to find out if a person is old enough to vote.
Compare the age (25) with the voting age limit, which is set to 18.
It should output the following:
"Old enough to vote!" if age is greater than or equal to votingAge
"Not old enough to vote." if age is lesser than votingAge





Indentation
JavaScript operators are symbols or keywords that perform operations on variables and values. We'll talk more about it in later modules, for now, let's have a look at some of the prominent comparison operators which are used extensively in the if( ) condition:

Comparison Operators
== (equality): Checks if two values are equal.
!= (inequality): Checks if two values are not equal.
=== (strict equality): Checks if two values are equal without type conversion.
!== (strict inequality): Checks if two values are not equal without type conversion.
> (greater than), < (less than), >= (greater than or equal to), <= (less than or equal to): Compare numeric values.
//Some examples:
var adultAge = 18;
var age = 11;
if(age >= adultAge){ // condition is false
  console.log("Adult");
} else {
  console.log("Minor"); // Minor will be printed
}


if (10 === '10') {  // condition is false (strict equality)
  console.log("Types are equal");
} else{
  console.log("Types are not equal"); // this would be the output
}


if(10 == '10'){  // true
  console.log("Values are equal"); // this would be the output
} else {
  console.log("Not equal");
}

If notice the last example, the the condition (10 == '10) is true. The == operator performs type coercion if the operands are of different types. Meaning, it compares values after attempting to convert them to a common type. In this example, JavaScript converts the string to a number before making the comparison.

Task
Write a program to check whether the length of the string CodeChef is less than 5 or greater.

If the length is greater than 5 print Long String
If it's less than or equal to 5 print Short String

